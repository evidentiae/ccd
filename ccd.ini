;
; CCD initialization file (identical for all OS)
;
; TAPI and $(variables) available since CCD v2.1 only
;   

general begin
  defcomdev = "TAPI"           ; "TAPI" supported in Win32 since ccd v2.0
  modemInit = "ATHE0V1Q0"
  HSmodemInit = "ATHE0V1Q0"
  modemHangup ="ATH"
  inputFileName =  INPUT
  outputFileName = OUTPUT
  hangAround = TRUE
  logFile = "ccd.log"           ; for UNIX try  "/dev/tty" for live log update
  loggingEnabled = TRUE
  logFileAppend = TRUE         ; set to true for trouble shooting the installation. (Could create large log files)
  disconnectAfterTX = TRUE
  hangupDelay = 10
  ;
  ;The following 3 parameters are default values that apply to all network definiton
  ;blocs unless they are redefined in the connection bloc itself
  ;
  v2convertAccent=TRUE            ; V2 input file only convert French characters from code page 850 to non-accented
  dialRetries = 2                 ; how many retries
  delayBetweenRetries=5           ; in seconds
  ;
  ;Modify these variables and use your local datapac phone number
  ;
  $localDatapac96="1-514-284-1025"  ; local datapac phone number for 9600 baud connection
  $localDatapac24="1-514-284-1025"  ; local datapac phone number for 2400 baud connection
end

connectScript _datapac  = { retry 3 {
                              transmit "...^M"
                              wait 3 for "DATAPAC:" then {
                                transmit address "^M"
                                wait 3 for "connected" then return 0
                              }
                            }
                          }  

connectScript _lasernet  = { retry 3 {
                              transmit "...^M"
                              wait 3 for "DATAPAC:" then {
                                transmit address "^M"
                                return 0
                              }
                            }
                          }  

connectScript _abc  = { retry 3 {
                                 wait 3 for "*" then
                                 {
                                   transmit address "^M"
                                   wait 3 for "OK" then return 0
                                 }
                                }
                      }  

connectScript _NDCdirect = { transmit "CCD^M" delay 1 transmit "^M"  return 0 }

connectScript _direct = { transmit "CCD^M"  return 0 }
